digraph {
        compound = "true"
        newrank = "true"
        subgraph "root" {
                "[root] aws_appautoscaling_policy.autoscaling_read_replica_count" [label = "aws_appautoscaling_policy.autoscaling_read_replica_count", shape = "box"]
                "[root] aws_appautoscaling_target.read_replica_count" [label = "aws_appautoscaling_target.read_replica_count", shape = "box"]
                "[root] aws_db_subnet_group.this" [label = "aws_db_subnet_group.this", shape = "box"]
                "[root] aws_iam_role.rds_enhanced_monitoring" [label = "aws_iam_role.rds_enhanced_monitoring", shape = "box"]
                "[root] aws_iam_role_policy_attachment.rds_enhanced_monitoring" [label = "aws_iam_role_policy_attachment.rds_enhanced_monitoring", shape = "box"]
                "[root] aws_rds_cluster.this" [label = "aws_rds_cluster.this", shape = "box"]
                "[root] aws_rds_cluster_instance.this" [label = "aws_rds_cluster_instance.this", shape = "box"]
                "[root] aws_security_group.this" [label = "aws_security_group.this", shape = "box"]
                "[root] aws_security_group_rule.default_ingress" [label = "aws_security_group_rule.default_ingress", shape = "box"]
                "[root] data.aws_iam_policy_document.monitoring_rds_assume_role" [label = "data.aws_iam_policy_document.monitoring_rds_assume_role", shape = "box"]
                "[root] provider.aws" [label = "provider.aws", shape = "diamond"]
                "[root] provider.random" [label = "provider.random", shape = "diamond"]
                "[root] random_id.master_password" [label = "random_id.master_password", shape = "box"]
                "[root] random_id.snapshot_identifier" [label = "random_id.snapshot_identifier", shape = "box"]
                "[root] aws_appautoscaling_policy.autoscaling_read_replica_count" -> "[root] aws_appautoscaling_target.read_replica_count"
                "[root] aws_appautoscaling_policy.autoscaling_read_replica_count" -> "[root] var.replica_scale_cpu"
                "[root] aws_appautoscaling_policy.autoscaling_read_replica_count" -> "[root] var.replica_scale_in_cooldown"
                "[root] aws_appautoscaling_policy.autoscaling_read_replica_count" -> "[root] var.replica_scale_out_cooldown"
                "[root] aws_appautoscaling_target.read_replica_count" -> "[root] aws_rds_cluster.this"
                "[root] aws_appautoscaling_target.read_replica_count" -> "[root] var.replica_scale_enabled"
                "[root] aws_appautoscaling_target.read_replica_count" -> "[root] var.replica_scale_max"
                "[root] aws_appautoscaling_target.read_replica_count" -> "[root] var.replica_scale_min"
                "[root] aws_db_subnet_group.this" -> "[root] provider.aws"
                "[root] aws_db_subnet_group.this" -> "[root] var.name"
                "[root] aws_db_subnet_group.this" -> "[root] var.subnets"
                "[root] aws_db_subnet_group.this" -> "[root] var.tags"
                "[root] aws_iam_role.rds_enhanced_monitoring" -> "[root] data.aws_iam_policy_document.monitoring_rds_assume_role"
                "[root] aws_iam_role.rds_enhanced_monitoring" -> "[root] var.monitoring_interval"
                "[root] aws_iam_role.rds_enhanced_monitoring" -> "[root] var.name"
                "[root] aws_iam_role_policy_attachment.rds_enhanced_monitoring" -> "[root] aws_iam_role.rds_enhanced_monitoring"
                "[root] aws_rds_cluster.this" -> "[root] aws_db_subnet_group.this"
                "[root] aws_rds_cluster.this" -> "[root] aws_security_group.this"
                "[root] aws_rds_cluster.this" -> "[root] local.master_password"
                "[root] aws_rds_cluster.this" -> "[root] local.port"
                "[root] aws_rds_cluster.this" -> "[root] random_id.snapshot_identifier"
                "[root] aws_rds_cluster.this" -> "[root] var.apply_immediately"
                "[root] aws_rds_cluster.this" -> "[root] var.availability_zones"
                "[root] aws_rds_cluster.this" -> "[root] var.backup_retention_period"
                "[root] aws_rds_cluster.this" -> "[root] var.db_cluster_parameter_group_name"
                "[root] aws_rds_cluster.this" -> "[root] var.engine_version"
                "[root] aws_rds_cluster.this" -> "[root] var.final_snapshot_identifier_prefix"
                "[root] aws_rds_cluster.this" -> "[root] var.kms_key_id"
                "[root] aws_rds_cluster.this" -> "[root] var.preferred_backup_window"
                "[root] aws_rds_cluster.this" -> "[root] var.preferred_maintenance_window"
                "[root] aws_rds_cluster.this" -> "[root] var.skip_final_snapshot"
                "[root] aws_rds_cluster.this" -> "[root] var.snapshot_identifier"
                "[root] aws_rds_cluster.this" -> "[root] var.storage_encrypted"
                "[root] aws_rds_cluster.this" -> "[root] var.username"
                "[root] aws_rds_cluster_instance.this" -> "[root] aws_iam_role.rds_enhanced_monitoring"
                "[root] aws_rds_cluster_instance.this" -> "[root] aws_rds_cluster.this"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.auto_minor_version_upgrade"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.db_parameter_group_name"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.instance_type"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.performance_insights_enabled"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.performance_insights_kms_key_id"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.publicly_accessible"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.replica_count"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.replica_scale_enabled"
                "[root] aws_rds_cluster_instance.this" -> "[root] var.replica_scale_min"
                "[root] aws_security_group.this" -> "[root] provider.aws"
                "[root] aws_security_group.this" -> "[root] var.name"
                "[root] aws_security_group.this" -> "[root] var.tags"
                "[root] aws_security_group.this" -> "[root] var.vpc_id"
                "[root] aws_security_group_rule.default_ingress" -> "[root] aws_rds_cluster.this"
                "[root] aws_security_group_rule.default_ingress" -> "[root] var.allowed_security_groups"
                "[root] data.aws_iam_policy_document.monitoring_rds_assume_role" -> "[root] provider.aws"
                "[root] local.master_password" -> "[root] random_id.master_password"
                "[root] local.master_password" -> "[root] var.password"
                "[root] local.port" -> "[root] var.engine"
                "[root] local.port" -> "[root] var.port"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] aws_appautoscaling_policy.autoscaling_read_replica_count"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] aws_iam_role_policy_attachment.rds_enhanced_monitoring"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] aws_security_group_rule.default_ingress"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_endpoint"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_id"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_instance_endpoints"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_master_password"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_master_username"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_port"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_rds_cluster_reader_endpoint"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] output.this_security_group_id"
                "[root] meta.count-boundary (count boundary fixup)" -> "[root] var.identifier_prefix"
                "[root] output.this_rds_cluster_endpoint" -> "[root] aws_rds_cluster.this"
                "[root] output.this_rds_cluster_id" -> "[root] aws_rds_cluster.this"
                "[root] output.this_rds_cluster_instance_endpoints" -> "[root] aws_rds_cluster_instance.this"
                "[root] output.this_rds_cluster_master_password" -> "[root] aws_rds_cluster.this"
                "[root] output.this_rds_cluster_master_username" -> "[root] aws_rds_cluster.this"
                "[root] output.this_rds_cluster_port" -> "[root] aws_rds_cluster.this"
                "[root] output.this_rds_cluster_reader_endpoint" -> "[root] aws_rds_cluster.this"
                "[root] output.this_security_group_id" -> "[root] aws_security_group.this"
                "[root] provider.aws (close)" -> "[root] aws_appautoscaling_policy.autoscaling_read_replica_count"
                "[root] provider.aws (close)" -> "[root] aws_iam_role_policy_attachment.rds_enhanced_monitoring"
                "[root] provider.aws (close)" -> "[root] aws_rds_cluster_instance.this"
                "[root] provider.aws (close)" -> "[root] aws_security_group_rule.default_ingress"
                "[root] provider.random (close)" -> "[root] random_id.master_password"
                "[root] provider.random (close)" -> "[root] random_id.snapshot_identifier"
                "[root] random_id.master_password" -> "[root] provider.random"
                "[root] random_id.snapshot_identifier" -> "[root] provider.random"
                "[root] random_id.snapshot_identifier" -> "[root] var.name"
                "[root] root" -> "[root] meta.count-boundary (count boundary fixup)"
                "[root] root" -> "[root] provider.aws (close)"
                "[root] root" -> "[root] provider.random (close)"
        }
}